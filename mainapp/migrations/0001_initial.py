# Generated by Django 3.0 on 2021-05-16 22:28

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Achievement',
            fields=[
                ('achievement_id', models.AutoField(db_column='Achievement_id', primary_key=True, serialize=False)),
                ('events_name', models.CharField(db_column='Events_name', max_length=64)),
                ('description_of_the_achievement', models.TextField(db_column='Description_of_the_Achievement')),
                ('certificate', models.BinaryField(db_column='Certificate')),
            ],
            options={
                'db_table': 'Achievement',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=80, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.BooleanField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=30)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.BooleanField()),
                ('is_active', models.BooleanField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('company_id', models.AutoField(db_column='Company_id', primary_key=True, serialize=False)),
                ('company_name', models.CharField(db_column='Company_name', max_length=32)),
                ('description', models.TextField(db_column='Description')),
            ],
            options={
                'db_table': 'Company',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Direction',
            fields=[
                ('direction_id', models.AutoField(db_column='Direction_id', primary_key=True, serialize=False)),
                ('direction_name', models.CharField(db_column='Direction_name', max_length=64)),
            ],
            options={
                'db_table': 'Direction',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.SmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Education',
            fields=[
                ('education_id', models.AutoField(db_column='Education_id', primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'Education',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Employer',
            fields=[
                ('employer_id', models.AutoField(db_column='Employer_id', primary_key=True, serialize=False)),
                ('surname', models.CharField(db_column='Surname', max_length=32)),
                ('employer_name', models.CharField(db_column='Employer_name', max_length=32)),
                ('middlename', models.CharField(db_column='Middlename', max_length=32)),
                ('login', models.CharField(db_column='Login', max_length=25)),
                ('password', models.CharField(db_column='Password', max_length=15)),
            ],
            options={
                'db_table': 'Employer',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Events',
            fields=[
                ('events_id', models.AutoField(db_column='Events_id', primary_key=True, serialize=False)),
                ('events_name', models.CharField(db_column='Events_name', max_length=64)),
                ('events_type', models.CharField(db_column='Events_type', max_length=32)),
                ('events_data', models.TextField(db_column='Events_data')),
            ],
            options={
                'db_table': 'Events',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Faculty',
            fields=[
                ('faculty_id', models.AutoField(db_column='Faculty_id', primary_key=True, serialize=False)),
                ('faculty_name', models.CharField(db_column='Faculty_name', max_length=64)),
            ],
            options={
                'db_table': 'Faculty',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('group_id', models.AutoField(db_column='Group_id', primary_key=True, serialize=False)),
                ('group_name', models.CharField(db_column='Group_name', max_length=32)),
            ],
            options={
                'db_table': 'Group_',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ListOfAchievementsreferences',
            fields=[
                ('list_of_achievementsreferences_id', models.AutoField(db_column='List_of_Achievementsreferences_id', primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'List_of_Achievementsreferences',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MainTask',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50)),
                ('task', models.TextField()),
            ],
            options={
                'db_table': 'main_task',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('profile_id', models.AutoField(db_column='Profile_id', primary_key=True, serialize=False)),
                ('profile_name', models.CharField(db_column='Profile_name', max_length=64)),
            ],
            options={
                'db_table': 'Profile',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('project_id', models.AutoField(db_column='Project_id', primary_key=True, serialize=False)),
                ('project_name', models.CharField(db_column='Project_name', max_length=64)),
                ('project_description', models.TextField(db_column='Project_description')),
                ('project_content', models.TextField(db_column='Project_content')),
            ],
            options={
                'db_table': 'Project',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProjectList',
            fields=[
                ('project_list_id', models.AutoField(db_column='Project_list_id', primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'Project_list',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Specialization',
            fields=[
                ('specialization_id', models.AutoField(db_column='Specialization_id', primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'Specialization',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('student_id', models.AutoField(db_column='Student_id', primary_key=True, serialize=False)),
                ('surname', models.CharField(db_column='Surname', max_length=32)),
                ('student_name', models.CharField(db_column='Student_name', max_length=32)),
                ('middlename', models.CharField(db_column='Middlename', max_length=32)),
                ('login', models.CharField(db_column='Login', max_length=25)),
                ('password', models.CharField(db_column='Password', max_length=15)),
            ],
            options={
                'db_table': 'Student',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Vacancy',
            fields=[
                ('vacancy_id', models.AutoField(db_column='Vacancy_id', primary_key=True, serialize=False)),
                ('vacancy_name', models.CharField(db_column='Vacancy_name', max_length=32)),
                ('post', models.CharField(db_column='Post', max_length=32)),
                ('requirements', models.TextField(db_column='Requirements')),
            ],
            options={
                'db_table': 'Vacancy',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Work',
            fields=[
                ('work_id', models.AutoField(db_column='Work_id', primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'Work',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BlogCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Имя категории')),
                ('slug', models.SlugField(unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='BlogPost',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Название поста')),
                ('slug', models.SlugField(unique=True)),
                ('content', models.TextField()),
                ('image', models.ImageField(blank='True', null='True', upload_to='blog_posts/')),
                ('pud_date', models.DateTimeField(auto_now=True)),
                ('in_archive', models.BooleanField(default=False)),
                ('blog_category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mainapp.BlogCategory', verbose_name='Имя категории')),
            ],
        ),
    ]
